# tutorial
global workingLast
set workingLast 8
global workingLastSectionDone
set workingLastSectionDone -1


set workingName0 {XF を使って}
set workingText0 {\

XF を起動すると、まず空のトップレベル・ウィンドウ
が現れ、次にメニュー・バーといくつかのリストから成
る二番目のトップレベル・ウィンドウが表示されます。
この空のトップレベル・ウィンドウは作業領域、すなわ
ちこれから構築しようとするアプリケーションのメイン
のダイアログ・ウィンドウとなる場所です。二番目のウィ
ンドウは、XF のメインの編集ウィンドウです。ここか
ら XF のすべての機能にアクセスします。

ここでの作業領域は、構築するアプリケーションそのも
のです。ボタンを押せば、あたかも XF とは無関係にア
プリケーションが動作しているかのように、ボタンのア
クションが実行されます。}


set workingName1 {XF の編集ウィンドウ}
set workingText1 {\
メインの編集ウィンドウは、上からいくつかの部分に分
かれています。最上部にはメニュー・バーがあり、ここ
から XF の編集機能を起動することができます。このメ
ニュー・バーの下には、現在の状態を示すステイタス・
ラインがあります。ステイタス・ラインは、起動時には
何も表示されていません。ステイタス・ラインの右側に
は、カット・バッファの状態が示されています。さらに
これらの下には、現在のウィジェット・パスが表示され
ています。このウィジェット・パスは、現在着目してい
るウィジェットの名前です。新しいウィジェットを追加
したり、ウィジェットのパラメタを変更したり、などと
いったすべての作業は、このウィジェットに対して行わ
れます。ウィジェット・パスの下には、３つのリストが
あります。左側のリストには、配布された Tk に含まれ
ているウィジェットのクラスが表示されています。中央
のリストには、標準の Tk ウィジェットを拡張したもの
として利用可能な、追加されたウィジェットのクラスが
表示されています。これらの追加されたウィジェットを
利用するには、そのための修正が施された Tk のコマン
ド・インタプリタが必要です。右側のリストには、複雑
なウィジェットの構成が示されています。これはダイア
ログの一般的な要素となるようなもので、"template" 
と呼ばれます。このリストの下には、現在選択されてい
るクラスの名前が表示されています。このクラス名の下
にある２つのボタンのうちの１つを押すことによって、
そのクラスのウィジェットがあなたのアプリケーション
に挿入されます。左側の "Add with defaults" ボタン
は、そのクラスのウィジェットをディフォルトのパラメ
タを用いて直ちに挿入するものです。右側の "Add and
configure" ボタンは、そのクラスのウィジェットのパ
ラメタ・ウィンドウを呼び出し、ウィジェットの名前や
パラメタを定義してから挿入を行うためのものです。}


set workingName2 {ウィジェットの挿入}
set workingText2 {\
先に述べたように、XF のメイン編集ウィンドウの２つ
のボタンのいずれかを押すことによって、アプリケーショ
ンにウィジェットを挿入することができます。２つのボ
タンの間にあるスケールの値を１以外にすることによっ
て、同時に複数のウィジェットを挿入することが可能で
す。また、リスト上のウィジェットのクラス名をマウス
の左ボタンでダブル・クリックすることによって、"Add
with defaults" ボタンと同様にディフォルトの属性を
用いてウィジェットの挿入を行うことができます。"Add
and configure" ボタンと同様にパラメタを定義してか
ら挿入を行うためには、マウスの右ボタンでダブル・ク
リックします。}


set workingName3 {ウィジェットのパラメタの設定}
set workingText3 {\
ウィジェットの挿入後にそのパラメタを変更するために
は、メニューの "Configuration" から "Parameters" 
の項目を選択して下さい。これによって、現在選ばれて
いるウィジェットのパラメタを設定するためのダイアロ
グ・ウィンドウが起動されます。直接アプリケーション
上のウィジェットをダブル・クリックすることによって
も、ダイアログ・ウィンドウを起動することができます。

パラメタ設定のダイアログ・ウィンドウを用いることに
よって、ウィジェットの様々なパラメタを設定すること
ができます。各々のウィジェット・クラスには、独自の
パラメタの設定があります。これによって、例えば前景
色やフォントなどのパラメタを、ウィジェットごとに設
定してやることが可能です。また、ボタンなどに対して
『機能』を設定する場合は、"command" パラメタを用い
ます。パラメタの中には（色やフォントなど）別のダイ
アログ・ウィンドウを用いて設定を行うものもあります。
このダイアログ・ウィンドウは、パラメタの入力フィー
ルドをマウスの右ボタンでダブル・クリックすることに
よって起動されます。}


set workingName4 {pack を用いたレイアウト}
set workingText4 {\
様々なウィジェットのレイアウトを決めるために、pack 
や place を用います。これらのレイアウトの手法につ
いての詳しい説明は、該当する章を参照して下さい。

ここでは、pack についての概略を説明します。pack を
起動するためには、メニューの "Configuration" から 
"Packing" の項目を選択します。すると、最上部にいく
つかのボタン、続いて２つのスライダ、２つのリスト、
最下部に３行にわたるボタンを持つウィンドウが表示さ
れます。このウィンドウ上で、pack のためのすべての
定義を行います。左側のリストには、現在のトップレベ
ル（現在定義しているウィジェットを含んだトップレベ
ル）のすべての子供が表示されています。右側のリスト
には、現在定義しているウィジェットの子供が表示され
ています。まず右側のリストからウィジェットを選び、
上部のボタンとスライダを用いて、それぞれのウィジェッ
トに対する pack のオプションの値を設定することがで
きます。設定は、アプリケーション上のウィジェットの
レイアウトに、直ちに反映されます。}


set workingName5 {手続き}
set workingText5 {\
アプリケーションの手続きの定義を追加するためには、
メニューの "Programming" から "Procedures" の項目
を選択します。すると、すでに定義されている手続きの
一覧がリストで表示されます。このダイアログ・ウィン
ドウ上で、手続きの追加、修正、改名などの編集作業を
行います。}


set workingName6 {起動／終了時の source}
set workingText6 {\
アプリケーションの起動時に、何らかの制御（例えば、
引数の解析、リストの初期化、等）が必要であるならば、
『起動／終了時の source』を利用することができます。
起動時の source は、アプリケーションが起動される直
前に実行される手続きです。終了時の source は、プロ
グラムの制御がメイン・ループに戻る直前に実行されま
す。起動時の source を定義するためには、メニューの 
"Programming" から "Startup source" の項目を選択し
て下さい。}


set workingName7 {カット／ペーストと template}
set workingText7 {\
XF は、カット／ペーストの機構を提供しています。こ
れによって、どんなウィジェットの構成であっても、自
由にカットし、アプリケーション中にペーストすること
ができます。ただし、"." だけはカットできません。現
在のカット・バッファの内容は、Tcl/Tk のコードとし
て、あるいはウィジェットの構成として見ることが可能
です。

また、カット・バッファの内容をファイルにセーブする
こともできます。template は、template 用のディレク
トリにセーブされたカット・バッファのことです。}


set workingName8 {トップレベル}
set workingText8 {\
アプリケーションに複数のトップレベルが存在する場合、
起動時にはそのうちの一部だけを表示したいということ
も起こり得ます。これは、XF のメインの編集ウィンド
ウ上の "Current widget path:" というラベルのプルダ
ウン・メニューで指定が可能です。トップレベル・ウィ
ンドウを表示する場合には、"ShowWindow.toplevel"と
いう手続きを呼び出します。ここでの toplevel は、着
目しているトップレベル・ウィンドウの名前です。トッ
プレベルを消去する場合には、"DestroyWindow.toplevel"
という手続きを呼び出します。}
